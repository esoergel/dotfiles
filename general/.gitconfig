# for config options, check out:
# https://www.kernel.org/pub/software/scm/git/docs/git-config.html
# https://www.kernel.org/pub/software/scm/git/docs/git-whatchanged.html
# https://www.kernel.org/pub/software/scm/git/docs/git-log.html
[user]
    name = Ethan Soergel
    email = esoergel@gmail.com
[alias]
    praise = blame
    bco = "!git checkout -b es/$1 $2 && echo $1 > /dev/null"
    co = checkout
    br = branch
    st = status
    su = submodule update --init --recursive
    ds = diff --stat
    us = reset HEAD  # "unstage" - hopefully prevent me from using --hard

    # remove all branches merged in to HEAD
    trim = "!git branch --merged | grep -v '\\*' | xargs -n 1 git branch -d"

    fetch-master = fetch origin master:master  # faster than fetching everything

    # LOG SHORTCUTS
    # colors: normal, black, red, green, yellow, blue, magenta, cyan and white
    # attributes: bold, dim, ul, blink and reverse.

    # list branches.  Run `git lb | sort` to see recently touched branches
    lb = "!git branch | grep -v '\\*' | xargs -n 1 -I %BRANCH git show --no-patch --pretty='%C(magenta)%as %C(cyan)%BRANCH %C(blue)%an %C(yellow)%s %C(reset)' %BRANCH"

    # one-line logs
    l = log --pretty=oneliner --decorate
    lnm = log HEAD --pretty=oneliner --not origin/master

    # log showing files changed
    ls = log --stat --graph
    lsn = log --stat HEAD --graph --not
    lsnm = log --stat HEAD --not origin/master --graph

    # log with full diffs
    lp = log -p HEAD
    lpn = log -p HEAD --not
    lpnm = log -p HEAD --not origin/master

    current-branch = rev-parse --abbrev-ref HEAD
    last-master-commit = "!git merge-base HEAD origin/master"
    rebase-new-commits = "!git rebase -i $(git last-master-commit)"
    rc = rebase --continue
    changed = "!git diff --stat $(git last-master-commit)"
    diff-last-master = "!git diff $(git last-master-commit)"

    # list aliases
    la = "!git config -l | grep alias | cut -c 7-"

    # List ALL commits
    lr = "!git l --reflog"

    stash-show = stash show --format=full

    # Show all of my commits - I usually grep these results by date to see what I worked on
    mine = "!git log --pretty=oneliner --date=iso --reflog | grep Soergel"

[pretty]
    # change %ad to %as to only show date, not datetime
    cute = "\
%n\
%C(magenta)%ad \
%C(blue)[%an] \
%C(green)%h \
%C(red)%d \
%n\
%C(yellow)%s \
%n%b \
%C(reset)"
    oneliner = "\
%C(magenta)%ad\
%C(blue) [%cn] \
%C(green)%h \
%C(yellow)%s\
%C(red)%d\
%C(reset)"
[format]
    pretty = cute
[log]
    decorate = short
    # relative, local, default, raw, iso, rfc, short
    date = iso
[rebase]
    missingCommitsCheck = error
[core]
    editor = vim
    excludesfile = /home/ethan/.gitignore
[push]
    default = current
[color]
    ui = true
[fetch]
    recurseSubmodules = on-demand
[diff]
    tool = vimdiff
    compactionHeuristic = 1
[merge]
    tool = vimdiff
[credential]
    helper = cache --timeout=3600
[web]
    browser = firefox
[submodule]
    fetchJobs = 0
[github]
    user = esoergel
